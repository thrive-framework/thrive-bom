plugins {
    id 'maven-publish'

    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group = 'com.github.thrive-framework'

version = "0.2.0-SNAPSHOT"

//lib versioning
ext {
    springCloudReleaseTrain = 'Greenwich.SR2' // relates to Spring Boot 2.1.x
//        springDataReleaseTrain = 'Lovelace-RELEASE'
    springBootVersion = '2.1.6.RELEASE'
    springBootAdminVersion = springBootVersion.split("[.]").take(3).join(".")
}

repositories {
    mavenCentral()
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven { url 'http://oss.jfrog.org/artifactory/oss-release-local/' }
    maven { url 'https://repo.spring.io/milestone' }

    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
}

//todo: introduce build (or at least publishing) caching based on this section
dependencyManagement {
    imports {
        //note to future self: order of BOM entries matter - later have higher prio
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudReleaseTrain}"
//            mavenBom "io.r2dbc:r2dbc-bom:Arabba-M8" //fixme version -> ext
//            mavenBom "org.springframework.data:spring-data-releasetrain:${springDataReleaseTrain}"
    }
    dependencies {
        dependency group: 'de.codecentric', name: "spring-boot-admin-starter-client", version: springBootAdminVersion
        dependency group: 'de.codecentric', name: "spring-boot-admin-starter-server", version: springBootAdminVersion

        dependency group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.2'

        dependency 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        dependency group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.0'
        dependency 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

        dependency group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
        dependency 'org.junit.vintage:junit-vintage-engine:5.3.1' //required for Spock
        dependency group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'

        dependency "com.github.sbrannen:spring-test-junit5:1.2.0"

        dependency 'org.projectlombok:lombok:1.18.2'

        dependency 'com.kstruct:gethostname4j:0.0.2'

        dependency 'io.springfox:springfox-swagger2:3.0.0-SNAPSHOT'
        dependency 'io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT'
        dependency 'io.springfox:springfox-spring-webflux:3.0.0-SNAPSHOT'

        dependency "io.projectreactor.kafka:reactor-kafka:1.1.0.RELEASE"

        //fixme I think that cloud stuff is covered by cloud bom
        dependency "org.springframework.cloud:spring-cloud-starter-gateway:2.1.1.RELEASE"
        dependency('org.springframework.cloud:spring-cloud-starter-zookeeper-all:2.1.1.RELEASE')
        
        dependency "org.apache.zookeeper:zookeeper:3.4.12"

        dependency group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.6'
        dependency group: 'org.springframework.boot.experimental', name: 'spring-boot-starter-data-r2dbc', version: '0.1.0.M1'
        dependency group: 'org.springframework.boot.experimental', name: 'spring-boot-actuator-autoconfigure-r2dbc', version: '0.1.0.M1'
        dependency group: 'io.r2dbc', name: 'r2dbc-postgresql', version: '0.8.0.M8'
    }
}


//see: https://stackoverflow.com/questions/47872069/confused-about-process-to-publish-snapshots-to-bintray
publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            pom {
                packaging 'pom'

            }
        }
    }
}

task clean(
    group: "build",
    description: "Mock, no-op task to satisfy Jitpack"
)

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = '5.2.1'
}
