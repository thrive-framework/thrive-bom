plugins {
    id 'maven-publish'

    id 'io.spring.dependency-management' version '1.0.8.RELEASE'

    // to publish !SNAPSHOTs to bintray and sync it to maven-central
    // ./gradlew bintrayUpload
    id 'com.jfrog.bintray' version '1.8.4'
    // to publish SNAPSHOTs and !SNAPSHOTs to oss.jfrog.org
    // ./gradlew artifactoryPublish
    id 'com.jfrog.artifactory' version '4.9.8'
}


group = 'com.github.thrive-framework'

version = "0.2.0-SNAPSHOT"

// project versioning
ext {
    isSnapshot = project.version.endsWith("-SNAPSHOT")
    println "thrive-bom version: ${project.version}; isSnapshot: ${isSnapshot}"
}

//lib versioning
ext {
    springCloudReleaseTrain = 'Greenwich.SR2' // relates to Spring Boot 2.1.x
//        springDataReleaseTrain = 'Lovelace-RELEASE'
    springBootVersion = '2.1.6.RELEASE'
    springBootAdminVersion = springBootVersion.split("[.]").take(3).join(".")
}

//todo: introduce build (or at least publishing) caching based on this section
dependencyManagement {
    imports {
        //note to future self: order of BOM entries matter - later have higher prio
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudReleaseTrain}"
//            mavenBom "io.r2dbc:r2dbc-bom:Arabba-M8" //fixme version -> ext
//            mavenBom "org.springframework.data:spring-data-releasetrain:${springDataReleaseTrain}"
    }
    dependencies {
        dependency group: 'de.codecentric', name: "spring-boot-admin-starter-client", version: springBootAdminVersion
        dependency group: 'de.codecentric', name: "spring-boot-admin-starter-server", version: springBootAdminVersion

        dependency group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.2'

        dependency 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        dependency group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.0'
        dependency 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

        dependency group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
        dependency 'org.junit.vintage:junit-vintage-engine:5.3.1' //required for Spock
        dependency group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'

        dependency "com.github.sbrannen:spring-test-junit5:1.2.0"

        dependency 'org.projectlombok:lombok:1.18.2'

        dependency 'com.kstruct:gethostname4j:0.0.2'

        dependency 'io.springfox:springfox-swagger2:3.0.0-SNAPSHOT'
        dependency 'io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT'
        dependency 'io.springfox:springfox-spring-webflux:3.0.0-SNAPSHOT'

        dependency "io.projectreactor.kafka:reactor-kafka:1.1.0.RELEASE"

        //fixme I think that cloud stuff is covered by cloud bom
        dependency "org.springframework.cloud:spring-cloud-starter-gateway:2.1.1.RELEASE"
        dependency('org.springframework.cloud:spring-cloud-starter-zookeeper-all:2.1.1.RELEASE')
        
        dependency "org.apache.zookeeper:zookeeper:3.4.12"

        dependency group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.6'
        dependency group: 'org.springframework.boot.experimental', name: 'spring-boot-starter-data-r2dbc', version: '0.1.0.M1'
        dependency group: 'org.springframework.boot.experimental', name: 'spring-boot-actuator-autoconfigure-r2dbc', version: '0.1.0.M1'
        dependency group: 'io.r2dbc', name: 'r2dbc-postgresql', version: '0.8.0.M8'
    }
}


//see: https://stackoverflow.com/questions/47872069/confused-about-process-to-publish-snapshots-to-bintray
publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            pom {
                packaging 'pom'

            }
        }
    }
}

//todo document this
//deployment vars
ext {
    if (file("./repoCreds.properties").exists()){
        println "Using credentials from local properties file"
        Properties creds = new Properties()
        file("./repoCreds.properties").withReader creds.&load
        user = creds.get("user")
        apiKey = creds.get("api-key")
    } else {
        println "Using credentials from env vars"
        user = System.getenv('BINTRAY_USER')
        apiKey = System.getenv('BINTRAY_API_KEY')
    }
    if (user == null || apiKey == null)
        println "Username of api key is missing"
    else
        println "User: $user; #apiKey: ${apiKey.hashCode()}"
}

// to publish SNAPSHOTs to http://oss.jfrog.org/oss-snapshot-local/
// and !SNAPSHOTs to http://oss.jfrog.org/oss-release-local/
//todo add build number, name and CI server for CircleCI
//links: https://www.jfrog.com/confluence/display/rtf/gradle+artifactory+plugin
//https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
artifactory {
    contextUrl = 'https://oss.jfrog.org'
    resolve {
        repository {
            repoKey = 'libs-release'
        }
    }
    publish {
        repository {
            if (isSnapshot) {
                repoKey = 'oss-snapshot-local'
            } else {
                repoKey = 'oss-release-local'
            }
            username = project.ext.user
            password = project.ext.apiKey
        }
        defaults {
            publications 'maven'
            properties = [ 'bintray.repo': 'thrive-framework/maven', 'bintray.package': 'thrive-bom', 'bintray.version': project.version.toString() ]
        }
    }
}

// to publish to bintray and later sync to maven-central
bintray {
    user = project.ext.user
    key = project.ext.apiKey
    publications = ['maven']
    publish = true
    override = true
    pkg {
        repo = 'maven'
        name = 'thrive-bom'
        userOrg = "thrive-framework"
        websiteUrl = 'https://github.com/thrive-framework/thrive-bom'
        issueTrackerUrl = 'https://github.com/thrive-framework/thrive-bom/issues'
        vcsUrl = 'https://github.com/thrive-framework/thrive-bom.git'
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        githubRepo = 'thrive-framework/thrive-bom'
        version {
            released = new Date()
            name = project.version
        }
    }
}

task handlePublications(
    group: "publishing",
    description: "Upload to Artifactory (in case of snapshot and non-snapshot versions) and Bintray (in case of non-snapshots)"
){
    dependsOn artifactoryPublish
    if (!isSnapshot)
        dependsOn bintrayUpload
}

task assertCredentialsPresent(
    group: "assertions",
    description: "Fails if username or api key is missing; else - no-op"
){
    doLast {
        assert project.ext.user
        assert project.ext.apiKey
    }
}

task assertIsRelease(
    group: "assertions",
    description: "Fails if version ends with any qualifier; else - no-op"
){
    doLast {
        assert !version.contains("-")
    }
}

task assertIsSnapshot(
    group: "assertions",
    description: "Fails if version doesn't end with '-SNAPSHOT'; else - no-op"
){
    doLast {
        assert version.endsWith("-SNAPSHOT")
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = '5.2.1'
}
